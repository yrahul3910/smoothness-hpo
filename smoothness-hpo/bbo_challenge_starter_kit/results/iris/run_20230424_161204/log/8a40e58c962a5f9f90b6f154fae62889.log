running: {'--uuid': '8a40e58c962a5f9f90b6f154fae62889', '-db-root': '/home/ryedida/bbo_challenge_starter_kit/output', '--opt-root': '/home/ryedida/bbo_challenge_starter_kit/example_submissions', '--data-root': None, '--db': 'run_20230424_161204', '--opt': 'hebo', '--data': 'iris', '--classifier': 'MLP-adam', '--metric': 'acc', '--calls': 15, '--suggestions': 1, '--jobs-file': None, '--verbose': False, 'dry_run': False, 'rev': 'a376313', 'opt_rev': '0.0.8'}
cmd: python hebo/optimizer.py -c MLP-adam -d iris -o hebo -u 8a40e58c962a5f9f90b6f154fae62889 -m acc -n 15 -p 1 -dir /home/ryedida/bbo_challenge_starter_kit/output -b run_20230424_161204
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

computed signature: ([{'alpha': 0.019628224813442792, 'batch_size': 182, 'beta_1': 0.9410202200271762, 'beta_2': 0.9998021557676793, 'epsilon': 1.8662266976518e-08, 'hidden_layer_sizes': 147, 'learning_rate_init': 0.0005627932047415167, 'tol': 0.03690557729213761, 'validation_fraction': 0.8846827852548593}, {'alpha': 0.0019982467392329444, 'batch_size': 200, 'beta_1': 0.919111482530466, 'beta_2': 0.9998488260436156, 'epsilon': 5.981221901152555e-07, 'hidden_layer_sizes': 61, 'learning_rate_init': 2.2310905607443014e-05, 'tol': 1.2046852412030316e-05, 'validation_fraction': 0.8117896445826539}, {'alpha': 0.46659545670218433, 'batch_size': 219, 'beta_1': 0.9889789783750891, 'beta_2': 0.9999896868093284, 'epsilon': 2.4234724484675948e-08, 'hidden_layer_sizes': 167, 'learning_rate_init': 2.972334644335654e-05, 'tol': 0.0036281404040243792, 'validation_fraction': 0.17260651658522078}, {'alpha': 4.656005689076002, 'batch_size': 135, 'beta_1': 0.870503881627747, 'beta_2': 0.9948873266941017, 'epsilon': 2.1023308743480125e-07, 'hidden_layer_sizes': 118, 'learning_rate_init': 0.0018781738757161913, 'tol': 1.1889379831773004e-05, 'validation_fraction': 0.6264327093752792}, {'alpha': 0.04705159350400542, 'batch_size': 158, 'beta_1': 0.9870884262730957, 'beta_2': 0.9999596874382349, 'epsilon': 1.1981845126013875e-08, 'hidden_layer_sizes': 116, 'learning_rate_init': 0.00617340520407431, 'tol': 1.741413418158619e-05, 'validation_fraction': 0.6754299026638921}], [-0.41666666666666663, -0.275, -0.3416666666666667, -0.725, -0.875])
 /home/ryedida/.local/lib/python3.9/site-packages/bayesmark/signatures.py:85: RuntimeWarning:Signature diverged on MLP-adam_iris_acc betwen [-0.52290909 -0.27918182 -0.34166667 -0.725      -0.91715152] and [-0.41666667 -0.275      -0.26133333 -0.68915152 -0.875     ]

Signature errors:
                          0         1         2         3         4       max
MLP-adam_iris_acc  0.106242  0.004182  0.080333  0.035848  0.042152  0.106242
max                0.106242  0.004182  0.080333  0.035848  0.042152  0.106242
starting sklearn study hebo MLP-adam iris acc 15 1
with data root: None
suggestion time taken 0.004855 iter 0 next_points [{'hidden_layer_sizes': 50, 'alpha': 9.999999999999979e-06, 'batch_size': 10, 'learning_rate_init': 9.999999999999979e-06, 'tol': 9.999999999999979e-06, 'validation_fraction': 0.09999999999999999, 'beta_1': 0.5, 'beta_2': 0.9, 'epsilon': 9.999999999999999e-10}]
function_evaluation time 0.116860 value -0.366667 suggestion {'hidden_layer_sizes': 50, 'alpha': 9.999999999999979e-06, 'batch_size': 10, 'learning_rate_init': 9.999999999999979e-06, 'tol': 9.999999999999979e-06, 'validation_fraction': 0.09999999999999999, 'beta_1': 0.5, 'beta_2': 0.9, 'epsilon': 9.999999999999999e-10}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.119581, current best -0.366667 at iter 0
suggestion time taken 0.003367 iter 1 next_points [{'hidden_layer_sizes': 125, 'alpha': 0.00999999999999999, 'batch_size': 130, 'learning_rate_init': 0.000999999999999999, 'tol': 0.000999999999999999, 'validation_fraction': 0.29999999999999993, 'beta_1': 0.7035623639735143, 'beta_2': 0.9486828237087461, 'epsilon': 3.162277660168379e-08}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.095915 value -0.750000 suggestion {'hidden_layer_sizes': 125, 'alpha': 0.00999999999999999, 'batch_size': 130, 'learning_rate_init': 0.000999999999999999, 'tol': 0.000999999999999999, 'validation_fraction': 0.29999999999999993, 'beta_1': 0.7035623639735143, 'beta_2': 0.9486828237087461, 'epsilon': 3.162277660168379e-08}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.001816, current best -0.750000 at iter 1
suggestion time taken 0.003489 iter 2 next_points [{'hidden_layer_sizes': 162, 'alpha': 0.0003162277660168373, 'batch_size': 70, 'learning_rate_init': 9.999999999999979e-05, 'tol': 0.01, 'validation_fraction': 0.5196152422706632, 'beta_1': 0.5931114414566264, 'beta_2': 0.9740030159223957, 'epsilon': 1.778279410038923e-07}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.049416 value -0.400000 suggestion {'hidden_layer_sizes': 162, 'alpha': 0.0003162277660168373, 'batch_size': 70, 'learning_rate_init': 9.999999999999979e-05, 'tol': 0.01, 'validation_fraction': 0.5196152422706632, 'beta_1': 0.5931114414566264, 'beta_2': 0.9740030159223957, 'epsilon': 1.778279410038923e-07}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.001748, current best -0.750000 at iter 2
suggestion time taken 0.003304 iter 3 next_points [{'hidden_layer_sizes': 88, 'alpha': 0.31622776601683794, 'batch_size': 190, 'learning_rate_init': 0.01, 'tol': 9.999999999999979e-05, 'validation_fraction': 0.1732050807568877, 'beta_1': 0.8345817757019256, 'beta_2': 0.9240208554669486, 'epsilon': 5.623413251903491e-09}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.076063 value -0.883333 suggestion {'hidden_layer_sizes': 88, 'alpha': 0.31622776601683794, 'batch_size': 190, 'learning_rate_init': 0.01, 'tol': 9.999999999999979e-05, 'validation_fraction': 0.1732050807568877, 'beta_1': 0.8345817757019256, 'beta_2': 0.9240208554669486, 'epsilon': 5.623413251903491e-09}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002047, current best -0.883333 at iter 3
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.428644 iter 4 next_points [{'alpha': 0.05693646937864745, 'batch_size': 172, 'beta_1': 0.987370007661575, 'beta_2': 0.980389346980626, 'epsilon': 1.329947255011522e-09, 'hidden_layer_sizes': 168, 'learning_rate_init': 0.02585454272316264, 'tol': 5.749479433053832e-05, 'validation_fraction': 0.10802180881993617}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.081489 value -0.791667 suggestion {'alpha': 0.05693646937864745, 'batch_size': 172, 'beta_1': 0.987370007661575, 'beta_2': 0.980389346980626, 'epsilon': 1.329947255011522e-09, 'hidden_layer_sizes': 168, 'learning_rate_init': 0.02585454272316264, 'tol': 5.749479433053832e-05, 'validation_fraction': 0.10802180881993617}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002243, current best -0.883333 at iter 4
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.397123 iter 5 next_points [{'alpha': 0.1267570053512161, 'batch_size': 98, 'beta_1': 0.5902483609745761, 'beta_2': 0.9900305073082575, 'epsilon': 1.825949260863872e-08, 'hidden_layer_sizes': 188, 'learning_rate_init': 0.049021597226430645, 'tol': 2.2458203912177404e-05, 'validation_fraction': 0.3977163848261234}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.084456 value -0.966667 suggestion {'alpha': 0.1267570053512161, 'batch_size': 98, 'beta_1': 0.5902483609745761, 'beta_2': 0.9900305073082575, 'epsilon': 1.825949260863872e-08, 'hidden_layer_sizes': 188, 'learning_rate_init': 0.049021597226430645, 'tol': 2.2458203912177404e-05, 'validation_fraction': 0.3977163848261234}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002269, current best -0.966667 at iter 5
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.426776 iter 6 next_points [{'alpha': 1.0366985929073969, 'batch_size': 151, 'beta_1': 0.9203532241872882, 'beta_2': 0.9999767821816637, 'epsilon': 3.872717671758532e-08, 'hidden_layer_sizes': 52, 'learning_rate_init': 0.0024479343141965136, 'tol': 0.00015102532486160368, 'validation_fraction': 0.5163153150823855}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.066803 value -0.566667 suggestion {'alpha': 1.0366985929073969, 'batch_size': 151, 'beta_1': 0.9203532241872882, 'beta_2': 0.9999767821816637, 'epsilon': 3.872717671758532e-08, 'hidden_layer_sizes': 52, 'learning_rate_init': 0.0024479343141965136, 'tol': 0.00015102532486160368, 'validation_fraction': 0.5163153150823855}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002219, current best -0.966667 at iter 6
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.434979 iter 7 next_points [{'alpha': 4.268467009267808, 'batch_size': 157, 'beta_1': 0.9385432843661141, 'beta_2': 0.9619332852918109, 'epsilon': 7.140213158313448e-08, 'hidden_layer_sizes': 134, 'learning_rate_init': 0.0001811670585931091, 'tol': 0.0024635765008028296, 'validation_fraction': 0.30421790712451735}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.044235 value -0.375000 suggestion {'alpha': 4.268467009267808, 'batch_size': 157, 'beta_1': 0.9385432843661141, 'beta_2': 0.9619332852918109, 'epsilon': 7.140213158313448e-08, 'hidden_layer_sizes': 134, 'learning_rate_init': 0.0001811670585931091, 'tol': 0.0024635765008028296, 'validation_fraction': 0.30421790712451735}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002232, current best -0.966667 at iter 7
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.387557 iter 8 next_points [{'alpha': 1.6892998650115575e-05, 'batch_size': 46, 'beta_1': 0.8676722662577766, 'beta_2': 0.931971206001708, 'epsilon': 1.0108512086025604e-07, 'hidden_layer_sizes': 166, 'learning_rate_init': 0.01162320010517532, 'tol': 7.563663548461462e-05, 'validation_fraction': 0.2428654796528269}]
function_evaluation time 0.080323 value -0.975000 suggestion {'alpha': 1.6892998650115575e-05, 'batch_size': 46, 'beta_1': 0.8676722662577766, 'beta_2': 0.931971206001708, 'epsilon': 1.0108512086025604e-07, 'hidden_layer_sizes': 166, 'learning_rate_init': 0.01162320010517532, 'tol': 7.563663548461462e-05, 'validation_fraction': 0.2428654796528269}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002214, current best -0.975000 at iter 8
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.839885 iter 9 next_points [{'alpha': 0.018107933922659684, 'batch_size': 224, 'beta_1': 0.9314805291294732, 'beta_2': 0.9998165254928111, 'epsilon': 4.075708473407942e-08, 'hidden_layer_sizes': 103, 'learning_rate_init': 0.0735401071177051, 'tol': 4.1907589762069974e-05, 'validation_fraction': 0.7488369718771736}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.081840 value -0.916667 suggestion {'alpha': 0.018107933922659684, 'batch_size': 224, 'beta_1': 0.9314805291294732, 'beta_2': 0.9998165254928111, 'epsilon': 4.075708473407942e-08, 'hidden_layer_sizes': 103, 'learning_rate_init': 0.0735401071177051, 'tol': 4.1907589762069974e-05, 'validation_fraction': 0.7488369718771736}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002228, current best -0.975000 at iter 9
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.380661 iter 10 next_points [{'alpha': 5.219133213136334, 'batch_size': 36, 'beta_1': 0.9689737859603058, 'beta_2': 0.9999206512697535, 'epsilon': 3.2475599246671304e-09, 'hidden_layer_sizes': 122, 'learning_rate_init': 0.005767487318659574, 'tol': 0.0177180924702088, 'validation_fraction': 0.6477432325951284}]
function_evaluation time 0.074169 value -0.891667 suggestion {'alpha': 5.219133213136334, 'batch_size': 36, 'beta_1': 0.9689737859603058, 'beta_2': 0.9999206512697535, 'epsilon': 3.2475599246671304e-09, 'hidden_layer_sizes': 122, 'learning_rate_init': 0.005767487318659574, 'tol': 0.0177180924702088, 'validation_fraction': 0.6477432325951284}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002466, current best -0.975000 at iter 10
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.497327 iter 11 next_points [{'alpha': 1.1148650920590032e-05, 'batch_size': 70, 'beta_1': 0.9544384490801338, 'beta_2': 0.9997513209550074, 'epsilon': 2.4572939261802543e-08, 'hidden_layer_sizes': 186, 'learning_rate_init': 1.152743557224351e-05, 'tol': 2.255048336726443e-05, 'validation_fraction': 0.8975354533605236}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.042432 value -0.300000 suggestion {'alpha': 1.1148650920590032e-05, 'batch_size': 70, 'beta_1': 0.9544384490801338, 'beta_2': 0.9997513209550074, 'epsilon': 2.4572939261802543e-08, 'hidden_layer_sizes': 186, 'learning_rate_init': 1.152743557224351e-05, 'tol': 2.255048336726443e-05, 'validation_fraction': 0.8975354533605236}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002210, current best -0.975000 at iter 11
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.452783 iter 12 next_points [{'alpha': 0.0482223244127214, 'batch_size': 66, 'beta_1': 0.9178558478223762, 'beta_2': 0.9999922816425788, 'epsilon': 4.511915526064307e-07, 'hidden_layer_sizes': 102, 'learning_rate_init': 0.0012588041191325028, 'tol': 0.00013067153173106576, 'validation_fraction': 0.620170988299407}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.065935 value -0.600000 suggestion {'alpha': 0.0482223244127214, 'batch_size': 66, 'beta_1': 0.9178558478223762, 'beta_2': 0.9999922816425788, 'epsilon': 4.511915526064307e-07, 'hidden_layer_sizes': 102, 'learning_rate_init': 0.0012588041191325028, 'tol': 0.00013067153173106576, 'validation_fraction': 0.620170988299407}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002228, current best -0.975000 at iter 12
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.657000 iter 13 next_points [{'alpha': 2.4338860332742156, 'batch_size': 91, 'beta_1': 0.9338070474850654, 'beta_2': 0.9999898830041752, 'epsilon': 3.0964338089262137e-09, 'hidden_layer_sizes': 125, 'learning_rate_init': 0.00017503793818486818, 'tol': 0.007246743287105242, 'validation_fraction': 0.46697367794960315}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.044594 value -0.283333 suggestion {'alpha': 2.4338860332742156, 'batch_size': 91, 'beta_1': 0.9338070474850654, 'beta_2': 0.9999898830041752, 'epsilon': 3.0964338089262137e-09, 'hidden_layer_sizes': 125, 'learning_rate_init': 0.00017503793818486818, 'tol': 0.007246743287105242, 'validation_fraction': 0.46697367794960315}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002207, current best -0.975000 at iter 13
 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

 /home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py:80: FutureWarning:In the future `np.bool` will be defined as the corresponding NumPy scalar.

Failure in optimizer suggest. Falling back to random search.
module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 145, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryedida/.local/lib/python3.9/site-packages/bayesmark/experiment.py", line 126, in run_study
    next_points = optimizer.suggest(n_suggestions)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py", line 155, in suggest
    model.fit(X, Xe, y)
  File "/home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/bo/models/gp/gpy_wgp.py", line 89, in fit
    self.gp.optimize_restarts(max_iters = self.num_epochs, messages = self.verbose, num_restarts = 10)
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 182, in optimize_restarts
    raise e
  File "/home/ryedida/.local/lib/python3.9/site-packages/paramz/model.py", line 171, in optimize_restarts
    self.randomize()
  File "/home/ryedida/.local/lib/python3.9/site-packages/GPy/core/__init__.py", line 80, in randomize
    unfixlist = np.ones((self.size,),dtype=np.bool)
  File "/home/ryedida/.local/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
suggestion time taken 0.584044 iter 14 next_points [{'alpha': 0.019138585795136512, 'batch_size': 171, 'beta_1': 0.935278711953281, 'beta_2': 0.9994288264402634, 'epsilon': 4.6492517581721145e-08, 'hidden_layer_sizes': 64, 'learning_rate_init': 0.029543808246955256, 'tol': 0.0002214038236904432, 'validation_fraction': 0.860475695396347}]
 /home/ryedida/.local/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py:605: UserWarning:Got `batch_size` less than 1 or larger than sample size. It is going to be clipped

function_evaluation time 0.074343 value -0.941667 suggestion {'alpha': 0.019138585795136512, 'batch_size': 171, 'beta_1': 0.935278711953281, 'beta_2': 0.9994288264402634, 'epsilon': 4.6492517581721145e-08, 'hidden_layer_sizes': 64, 'learning_rate_init': 0.029543808246955256, 'tol': 0.0002214038236904432, 'validation_fraction': 0.860475695396347}
 /home/ryedida/bbo_challenge_starter_kit/example_submissions/hebo/optimizer_mace.py:237: FutureWarning:The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.

observation time 0.002210, current best -0.975000 at iter 14
saving meta data: {'args': {'--uuid': '8a40e58c962a5f9f90b6f154fae62889', '-db-root': '/home/ryedida/bbo_challenge_starter_kit/output', '--opt-root': '/home/ryedida/bbo_challenge_starter_kit/example_submissions', '--data-root': None, '--db': 'run_20230424_161204', '--opt': 'hebo', '--data': 'iris', '--classifier': 'MLP-adam', '--metric': 'acc', '--calls': 15, '--suggestions': 1, '--jobs-file': None, '--verbose': False, 'dry_run': False, 'rev': 'a376313', 'opt_rev': '0.0.8'}, 'signature': ([{'alpha': 0.019628224813442792, 'batch_size': 182, 'beta_1': 0.9410202200271762, 'beta_2': 0.9998021557676793, 'epsilon': 1.8662266976518e-08, 'hidden_layer_sizes': 147, 'learning_rate_init': 0.0005627932047415167, 'tol': 0.03690557729213761, 'validation_fraction': 0.8846827852548593}, {'alpha': 0.0019982467392329444, 'batch_size': 200, 'beta_1': 0.919111482530466, 'beta_2': 0.9998488260436156, 'epsilon': 5.981221901152555e-07, 'hidden_layer_sizes': 61, 'learning_rate_init': 2.2310905607443014e-05, 'tol': 1.2046852412030316e-05, 'validation_fraction': 0.8117896445826539}, {'alpha': 0.46659545670218433, 'batch_size': 219, 'beta_1': 0.9889789783750891, 'beta_2': 0.9999896868093284, 'epsilon': 2.4234724484675948e-08, 'hidden_layer_sizes': 167, 'learning_rate_init': 2.972334644335654e-05, 'tol': 0.0036281404040243792, 'validation_fraction': 0.17260651658522078}, {'alpha': 4.656005689076002, 'batch_size': 135, 'beta_1': 0.870503881627747, 'beta_2': 0.9948873266941017, 'epsilon': 2.1023308743480125e-07, 'hidden_layer_sizes': 118, 'learning_rate_init': 0.0018781738757161913, 'tol': 1.1889379831773004e-05, 'validation_fraction': 0.6264327093752792}, {'alpha': 0.04705159350400542, 'batch_size': 158, 'beta_1': 0.9870884262730957, 'beta_2': 0.9999596874382349, 'epsilon': 1.1981845126013875e-08, 'hidden_layer_sizes': 116, 'learning_rate_init': 0.00617340520407431, 'tol': 1.741413418158619e-05, 'validation_fraction': 0.6754299026638921}], [-0.41666666666666663, -0.275, -0.3416666666666667, -0.725, -0.875])}
saving results
saving timing
saving suggest log
done
